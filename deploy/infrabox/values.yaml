# Host on which InfraBox will be accessible (i.e. "infrabox.example.com")
host: # <REQUIRED>

port: 443

# Namespace for system components
system_namespace: infrabox-system

# Namespace in which all jobs will be started
worker_namespace: infrabox-worker

general:
    # Set it to true if certificates of your Github Enterprise the SSL
    # certificate you are using for InfraBox itself are self signed.
    dont_check_certificates: false

    report_issue_url: https://github.com/SAP/infrabox/issues

    log_level: info

image:
    # Address of the docker registry which contains
    # all the InfraBox images. It must be accessible
    # by all hosts which run your kubernetes cluster.
    repository: quay.io/infrabox

    tag: latest

    private_repo: false

    username: #<required if use private_repo>

    password: #<required if use private_repo>


ha:
    enabled: false

    check_interval: 10

    active_timeout: 60

    global_host: #<required if use ha>

    global_port: 443

cluster:
    # Unique name of all clusters which are connected to the
    # same postgresql database
    name: master

    # Assigned labels
    labels: default

admin:
    # Email of the admin account
    email: # <REQUIRED>

    # Password of the admin accounts
    password: # <REQUIRED>

    # base64 encoded private key
    private_key: # <REQUIRED>

    # base64 encoded public key
    public_key: # <REQUIRED>

ingress:
    # If enabled an Ingress will be created
    enabled: true

# Exactly one storage option has to be enabled
storage:
    gcs:
        # Enable google cloud storage
        enabled: false

        # Bucket name
        bucket: # <REQUIRED>

        # base64 encoded service account .json file
        service_account: # <REQUIRED>

    s3:
        # Enabled S3
        enabled: false

        # Region
        region: # <REQUIRED>

        # Regeion endpoint
        endpoint: # <REQUIRED>

        # Region endpoint port
        port: 443

        # If https should be used or not
        secure: true

        # Bucket name
        bucket: # <REQUIRED>

        # AWS Access Key ID
        access_key_id: # <REQUIRED>

        # AWS Secret Access Key
        secret_access_key: # <REQUIRED>

    azure:
        # Enable Azure
        enabled: false

        # Account name
        account_name: # <REQUIRED>

        # Account key
        account_key: # <REQUIRED>

    swift:
        # Enable Swift
        enabled: false

        # auth url
        auth_url: # <REQUIRED>

        #project domain name or tenant name
        project_domain_name: # <REQUIRED>

        #project name
        project_name: # <REQUIRED>

        #user domain name
        user_domain_name: # <REQUIRED>

        #swift container name
        container_name: # <REQUIRED>

        #username
        username: # <REQUIRED>

        #password
        password: # <REQUIRED>

# PostgreSQL Database configuration. Use either Google's CloudSQL or any other PostgreSQL Database
database:
    cloudsql:
        # Enable
        enabled: false

        # Database name
        db: # <REQUIRED>

        # Username
        username: # <REQUIRED>

        # Password
        password: # <REQUIRED>

        # The instance connection name
        instance_connection_name: # <REQUIRED>

        # base64 encoded service account .json file
        service_account: # <REQUIRED>

    postgres:
        enabled: false

        # Host of your postgres database
        host: # <REQUIRED>

        # Port of your postgres database
        port: 5432

        # Database name
        db: # <REQUIRED>

        # Username
        username: # <REQUIRED>

        # Password
        password: # <REQUIRED>

# Gerrit configuration
gerrit:
    # Enable gerrit
    enabled: false

    # Gerrit Hostname
    hostname: # <REQUIRED>

    # Username
    username: # <REQUIRED>

    # base64 encoded private key for connecting to gerrit
    private_key: # <REQUIRED>

    # Port
    port: 29418

# Github configuration
github:
    # Enable Github
    enabled: false

    # Client ID of you Github App
    client_id: # <REQUIRED>

    # Client Secret of your Github App
    client_secret: # <REQUIRED>

    # A secret for the webhooks
    webhook_secret: # <REQUIRED>

    login:
        # If true then user can login with the Github account
        enabled: false

        # Github Login URL, change it if you use Github Enterprise
        url: https://github.com/login

        # If Github login is enabled you can limit access to users which belong to a certain set of
        # Github Organizations. Comma separated list for Github Organizations (i.e. "Org1,Org2,Org3")
        # If no organization is set everybody can login with its github ccount
        allowed_organizations:

    # Github API URL
    api_url: https://api.github.com

# General Account configuration
account:
    signup:
        # Enable users to signup with Email/Username/Password
        enabled: false

    ldap:
        # Enables LDAP, disables "account.signup.enabled"
        enabled: false

        # DN
        dn: # <REQUIRED>

        # Password
        password: # <REQUIRED>

        # Base
        base: # <REQUIRED>

        # URL
        url: # <REQUIRED>

api:
    # Replicas for the API Server
    replicas: 1

local_cache:
    # Enable a shared cache for all jobs running on the same machine
    enabled: false

    # Host path which will be available to all jobs at /infrabox/local-cache
    host_path: /tmp/infrabox/local_cache

docker_registry:
    # Instances of the docker registry
    replicas: 1

job:
    # Configure the internal docker daemon. Content should be a valid json
    # docker daemon config. It's required if you run with a self signed certificate
    # for your domain. In this case you have to mark the internal registry as insecure.
    # I.e.: {"insecure-registries": ["<HOST>"]}
    docker_daemon_config: |-
        {}

monitoring:
    # Enable InfraBox Monitoring. Requires prometheus-operator to be available.
    enabled: false
